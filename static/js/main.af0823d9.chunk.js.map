{"version":3,"sources":["iden.js","widgets/titulo.js","widgets/letra.js","main.js","app.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Iden","props","useState","nombre","setNombre","handleAvatarSelect","tipo","trim","length","alert","iden","avatar","localStorage","setItem","JSON","stringify","history","push","useEffect","parse","getItem","className","type","value","onChange","e","target","src","width","height","alt","onClick","Root","h5","Titulo","texto","descripcion","Letra","letra","onPress","id","toLowerCase","abecedario","vocales","consonantes","Main","setIden","handleLetraClick","document","getElementById","play","_","removeItem","map","index","key","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af0823d9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Iden = (props) => {\n  const [nombre, setNombre] = useState('');\n\n  useEffect(() => {\n    const iden = JSON.parse(localStorage.getItem('abc_diario_iden'));\n\n\t\tif (iden) {\n\t\t\tprops.history.push('/main');\n\t\t}\n  }, [props.history]);\n\n  function handleAvatarSelect(tipo) {\n    if (nombre.trim().length === 0) {\n\t\t\talert('Debes proporcionar el nombre de quien juega.');\n\t\t} else {\n      const iden = {\n\t\t\t\tnombre,\n\t\t\t\tavatar: tipo === 1 ? '/abc_diario/assets/images/donna.png' : '/abc_diario/assets/images/uomo.png',\n\t\t\t};\n\n      localStorage.setItem('abc_diario_iden', JSON.stringify(iden));\n      \n      props.history.push('/main');\n    }\n  }\n\n  return (\n    <Container className=\"container\">\n      <div className=\"row\">\n        <div className=\"col title center\">\n          <h2>¿Quién juega?</h2>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <input type=\"text\" value={nombre} className=\"form-control\" onChange={e => setNombre(e.target.value)} />\n        </div>  \n      </div>\n      <div className=\"row\">\n        <div className=\"col title center\">\n          <h2>Selecciona un avatar para continuar</h2>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col center\">\n          <img src=\"/abc_diario/assets/images/donna.png\" width=\"135\" height=\"135\" alt=\"Donna\" onClick={e => handleAvatarSelect(1)} />\n          &nbsp;&nbsp;&nbsp;\n          <img src=\"/abc_diario/assets/images/uomo.png\" width=\"135\" height=\"135\" alt=\"Uomo\" onClick={e => handleAvatarSelect(2)} />\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  .title {\n\t\tmargin-top: 2rem;\n\t\tmargin-bottom: 0.5rem;\n\t}\n\n\t.center {\n\t\ttext-align: center;\n\t}\n\n  img {\n    cursor: pointer;\n  }\n\n  h2 {\n    font-weight: 400;\n  }\n`;\n\nexport default Iden;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Titulo = (props) => {\n  return (\n    <Root>\n      {props.texto}\n      &nbsp;\n      <small className=\"text-muted\">({props.descripcion})</small>\n    </Root>\n  );\n}\n\nconst Root = styled.h5`\n  margin-top: 2rem;\n  margin-bottom: 1rem;\n`;\n\nexport default Titulo;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Letra = (props) => {\n  function handleLetraClick(letra) {\n    if (props.onPress) {\n      props.onPress(letra);\n    }\n  }\n\n  return (\n    <Root className=\"display-3 text-info\" onClick={e => handleLetraClick(props.letra)}>\n      <audio id={`sound${props.letra}`}>\n        <source src={`/abc_diario/assets/sounds/mp3/${props.letra.toLowerCase()}.mp3`} type=\"audio/mpeg\" />\n      </audio>\n      {props.letra} \n    </Root>\n  );\n}\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 5.5rem;\n  height: 5.5rem;\n  cursor: pointer;\n  margin-right: 0.5rem;\n  margin-bottom: 0.5rem;\n  border-radius: 0.5rem;\n\n  &:hover {\n\t\tbackground-color: rgba(0, 0, 0, 0.06);\n\t}\n\n  &:active {\n\t\tbackground-color: rgba(0, 0, 0, 0.12);\n\t}\n`;\n\nexport default Letra;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Titulo from './widgets/titulo';\nimport Letra from './widgets/letra';\n\nconst abecedario = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'Ñ', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\nconst vocales = ['A', 'E', 'I', 'O', 'U'];\nconst consonantes = ['B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'Ñ', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z'];\n\nconst Main = (props) => {\n  const [iden, setIden] = useState({});\n\n  useEffect(() => {\n    const iden = JSON.parse(localStorage.getItem('abc_diario_iden'));\n\n\t\tif (iden) {\n      setIden(iden);\n\t\t\t\n\t\t} else {\n      props.history.push('/');\n    }\n  }, [props.history]);\n\n  function handleSalir(_) {\n    localStorage.removeItem('abc_diario_iden');\n    props.history.push('/');\n  }\n\n  function handleLetraClick(letra) {\n    const element = document.getElementById(`sound${letra}`);\n    \n    element.play();\n  }\n\n  return (\n    <Container className=\"container\">\n      <div className=\"row\">\n      <div className=\"col\">\n          <header>\n            <img src={iden.avatar} width=\"48\" height=\"48\" alt=\"Avatar\" />\n            <div className=\"titulo\">\n              <h5 className=\"text-primary\">Hola {iden.nombre}</h5>\n              <div className=\"text-muted\">Juega conmigo al abc diario.</div>\n            </div>\n            <button type=\"button\" className=\"btn btn-light\" onClick={handleSalir}>Salir</button>\n          </header>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Titulo texto=\"Abecedario\" descripcion=\"Sonidos\" />\n        </div>\n      </div>\n      <div className=\"row\">\n\t\t    <div className=\"col\">\n\t\t\t    <div className=\"letras\">\n            {abecedario.map((letra, index) => <Letra key={index} letra={letra} onPress={handleLetraClick} />)}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <Titulo texto=\"Vocales\" descripcion=\"Detalle\" />\n        </div>\n        <div className=\"col\">\n          <Titulo texto=\"Consonantes\" descripcion=\"Detalle\" />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"letras\">\n            {vocales.map((letra, index) => <Letra key={index} letra={letra} onPress={handleLetraClick} />)}\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"letras\">\n            {consonantes.map((letra, index) => <Letra key={index} letra={letra} onPress={handleLetraClick} />)}\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  header {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: center;\n\t\tborder-bottom: 1px solid #b4b4b4;\n\t\tpadding: 1rem;\n\n    .titulo {\n      flex: 1;\n      margin-left: 1rem;\n\n      h5 {\n        margin-bottom: 0;\n      }\n    }\n\n    button {\n      margin: 0;\n    }\n\t}\n\n  .letras {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Iden from './iden';\nimport Main from './main';\n\nconst App = () => {\n  return (\n    <Router basename=\"/abc_diario\">\n      <Route exact path=\"/\" component={Iden} />\n      <Route exact path=\"/main\" component={Main} />\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}